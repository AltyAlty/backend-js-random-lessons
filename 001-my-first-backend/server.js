/*"require()" - это встроенная в Node.js функция, которая позволяет подключать модули. В данном случае мы подключаем
модуль для работы с HTTP. Для запуска сервера нужно ввести: node имя_файла*/
const http = require('http');
/*Также мы подключаем модуль "fs" для работы с файловой системой.*/
const fs = require('fs');

/*При помощи встроенного в модуль HTTP метода "createServer()" мы создаем сервер на нашем компьютере. В качестве
параметра мы указываем callback-фукцию, которая будет вызвана при запуске сервера и будет прослушивать какой-то
указанный порт, при этом будет перевызываться, когда будут производится HTTP-запросу на этот порт. Эта функция имеет
свои 2 параметра, которые она автоматически получит. Параметр "request" содержит информацию, которая касается
HTTP-запроса, например URL, по которому был совершен запрос. В свою очередь параметр "response" содержит информацию,
которая касается HTTP-ответа, например у этого параметра есть метод "write()", благодаря которому мы можем указать
тело HTTP-ответа.*/
const server = http.createServer(
    (request, response) => {
        /*Сервер делает также еще один запрос на получение иконки, поэтому мы проверяем если у нас такой запрос
        происходит, то мы при помощи встроенного в модуль "fs" метода "createReadStream()", который позволяют открыть
        файл или поток и прочитать присутствующие в нем данные, превратив их в поток для чтения, получаем специальный
        объект по адресу изображения для нашей иконки. Далее мы при помощи еще одного встроенно в модуль "fs" метода
        "pipe()" переводим полученный поток для чтения в поток для записи, чтобы на запрос иконки был передан наш
        файл иконки.*/
        if (request.url === '/favicon.ico') {
            let fileStream = fs.createReadStream('./favicon.ico');
            return fileStream.pipe(response);
        }

        switch (request.url) {
            case '/home' :
                response.write('HOME');
                break;

            case '/' :
            case '/about' :
                response.write('ABOUT');
                break;

            default:
                response.write('404');
        }

        /*Метод "end()" еще один встроенный метод в параметр "response", который сигнализирует о том, что никакой
        информации больше не будет записано. Если после этого попытаться метод "write()", то будет ошибка.*/
        response.end();
    }
);

/*Метод "listen()" это встроенный метод в созданном нами HTTP-сервере. Этот метож создает слушателя по указанном порту
или пути.*/
server.listen(3003);